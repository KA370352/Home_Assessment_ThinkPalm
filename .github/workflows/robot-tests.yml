name: Robot Framework API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      kafka:
        image: confluentinc/cp-kafka:latest
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        ports:
          - 9092:9092

      zookeeper:
        image: confluentinc/cp-zookeeper:latest
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
        ports:
          - 2181:2181

      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
          - 15672:15672

      prometheus:
        image: prom/prometheus:latest
        ports:
          - 9090:9090

      pushgateway:
        image: prom/pushgateway:latest
        ports:
          - 9091:9091

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Java (for Allure)
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Install Allure
      run: |
        wget -q https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz
        tar -xf allure-2.24.0.tgz
        sudo mv allure-2.24.0 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
        allure --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for services
      run: |
        sleep 30
        # Check if services are ready
        curl --retry 10 --retry-delay 5 --retry-connrefused http://localhost:15672
        curl --retry 10 --retry-delay 5 --retry-connrefused http://localhost:9090

    - name: Run smoke tests
      run: |
        robot --listener allure_robotframework \
              --outputdir reports \
              --include smoke \
              --loglevel INFO \
              --pythonpath . \
              tests/api/

    - name: Run all API tests
      run: |
        robot --listener allure_robotframework \
              --outputdir reports \
              --exclude messaging \
              --loglevel INFO \
              --pythonpath . \
              tests/api/

    - name: Generate Allure Report
      if: always()
      run: |
        allure generate reports/allure-results -o reports/allure-reports --clean

    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: |
          reports/
          !reports/allure-results/

    - name: Upload Allure Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: allure-results
        path: reports/allure-results/

    - name: Publish Allure Report
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: reports/allure-reports
        destination_dir: allure-reports

    - name: Comment PR with report link
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸ“Š Test Report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-reports/'
          })
